
Notes
-----

Grab the latest development code:
  git clone git://repo.or.cz/quvi.git


1. Fixing a bug in quvi
------------------------

No general guidelines, use of git is warmly recommended. See also
"1.1. Fixing broken website support" and "3. Submitting patches".


1.1. Fixing broken website support
----------------------------------

Working with the lua scripts is fairly simple, see $prefix/share/quvi/lua/README
for more about the script search paths. Here's an example:

  mkdir myfix; cd myfix
  cp -r $prefix/share/quvi/* .
  git init; git add .; git commit -am 'initial.'
  (
    * edit / make changes
    * run "quvi" in the working directory
    * repeat until happy
  )
  git commit -am 'my fix for whatever'
  git format-patch -M -1
  (see submitting patches below)


1.2. Additional website support
-------------------------------

Before you read any further, please note that quvi isn't intended
to cover video websites that already allow downloading the hosted
videos. quvi focuses on the websites that require Adobe flash
"technology" to view the videos while making it difficult to download,
and that way work around the Adobe flash requirement, videos.

If you are looking to write additional support for a video website
which isn't currently supported by quvi, you can do so by using one
of the existing lua scripts and using them as "templates". Note that
how the video link is constructed, may vary greatly. Some are very
simple, others may require a lot of preliminary work.

quvi locates and loads the website lua scripts dynamically. It searches
a number of paths for the scripts in a specific order. For example, 
the working directory is searched for lua/website/ before any of the
global paths are scanned (e.g. $prefix/share/quvi/).

This means you can drop the new script, for example, in your working
directory's lua/website/ subdirs or even define QUVI_BASEDIR=PATH when
working on a new script.

Example:
  ./lua/website/youtube.lua
  /usr/share/quvi/website/youtube.lua

The former would be executed first as long its ident function
returns the will_handle variable set as "true". If you define the
QUVI_BASEDIR, note that quvi expects the defined path to contain
lua/website/ subdirs. Example:

  cd $quvi_top_srcdir
  mkdir tmp; cd tmp
  ../configure
  make
  QUVI_BASEDIR=../share ./src/quvi -t youtube


2. Copyright notice
-------------------

The default copyright notice will contain "quvi team" as the author
unless specified otherwise (e.g. "Copyright (C) 2010 quvi team").

If you are submitting new source code files to the project (e.g. scripts),
include your name, otherwise the default copyright notice will be used instead.


3. Submitting patches
---------------------

If you don't use git, then at very least use "diff -u" to
generate your patches.

Submit to either <http://code.google.com/p/quvi/issues/> issue
tracker, or <legatvs@gmail.com>.

Thanks!
