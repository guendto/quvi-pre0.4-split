Howto: Add support for another video website
============================================

1. About
--------

libquvi fetches and parses video page contents for various
video details and constructs the video download link from
these parsed details. The project also contains the "quvi"
executable which can be used to develop support for another
website.

As of 0.2.0 quvi uses Lua for scripting support allowing
easy development for new websites and maintainment of
the current support.


2. Checklist: Before you look any further
-----------------------------------------

* Does the website allow video downloading?
  - If yes, then there is no reason to add support for it
    - libquvi is intended to work around the flash requirement
    - Such patches will not be committed to the development tree


3. The hacker within
--------------------

It all boils down figuring out how we can access the videos
without Adobe Flash. To get a good idea of just how this varies
for each website, take a look at youtube.lua and buzzhumor.lua
scripts.

Sometimes digging deeper may be required:
  http://code.google.com/p/clive/issues/detail?id=6#c7

Once the data has been analyzed and the link construction figured
out, all that remains is writing the website rule (script).


4. Writing the website rule
---------------------------

The process was greatly simplified with the introduction of
Lua script support. This used to be a rather tedious task
having to tweak various GNU Autotools and C source code files.

Example:

  mkdir -p foo/lua/website/; cd foo
  cp $prefix/share/quvi/lua/website/buzzhumor.lua lua/website/bar.lua
  git init; git add .; git commit -am 'initial.'
  (
    * edit lua/website/bar.lua
    * run "quvi" in the working directory, e.g. "quvi TEST_URL"
    * repeat above two until happy
  )
  git commit -am 'add support for foo.'
  git format-patch -M -1
  (submit your patch, see below)

You can read more about the script search paths from
$prefix/share/quvi/lua/README file. Here's another example:

  cd $quvi_top_srcdir
  mkdir tmp; cd tmp
  ../configure
  make
  QUVI_BASEDIR=../share ./src/quvi -t youtube

The above works very well with the development code grabbed
from git://repo.or.cz/quvi.git.

Make a note of QUVI_BASEDIR, you can define the base directory
from which libquvi should start looking for lua/website/
directory.


5. Checklist: Before you submit your patch
------------------------------------------

* Does the website support multiple formats?
  - If yes, then consider adding support for them as well
    - If there's limited or no data available on this, skip
    - We can always look into this later when/if more data unfolds

* Does your code parse everything correctly?
  - Video ID
  - Video title
  - Video link

* Does your code cleanup the video title?
  - We want the video title only
  - Anything else, e.g. domain name should be excluded from the title

* Did you confirm that all of the above works?
  - e.g. quvi URL

* Add your name to the copyright notice
  - We will default to "Copyright (C) 201x quvi team" by default


6. Submitting patches
---------------------

See $prefix/share/quvi/docs/howtos/HowtoSubmitPatches for details.
