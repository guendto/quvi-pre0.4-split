
Title: Formats


About: API Functions

Functions that return format lists.

 * <quvi_query_formats> returns a list of available formats to an URL
 * <quvi_next_supported_website> returns the static list of formats
 * <quvi_supported_ident> returns the static list of formats


About: Static list

As of 0.2.17 the static list contains either 'default' or 'default|best'.
This list was originally provided to give the applications and their
users some idea what formats should be available, even if it meant that
some of those formats were not actually available at all.

This led to much confusion about the available formats. See <Dynamic list> 
which aims the short-comings of the static list.


About: Dynamic list

Addresses the issues with the static list. libquvi 0.2.17 adds a new function
<quvi_query_formats> that creates the list from the data returned by the servers.

  * It checks whether the library can handle the URL
  * It returns a _dynamically_ created list of _available formats_ (as
    reported by the server)
  * It *does not*, however, verify the URLs (see <quvi_parse>,
    <quvi_setopt> and <QUVIOPT_NOVERIFY>)
  * Returns 'default' if the webscript supports only one format


About: 'default' and 'best' formats

'default' and 'best' are not really formats. These strings are treated
as constants and indicate the 'default format' and the 'best format'
to the webscripts. The webscripts fallback to 'default' if they do
not recognize the format string.


About: More about 'default' and 'best'

How these are determined is webscript specific.
When a webscript supports >1 formats:

  * 'default' is determined by comparing the media quality properties.
    Webscripts typically default to the lowest quality. If such data
    is not available, some alt. method is used instead.

  * 'best' is determined similarly but chosen to be the one with the
    highest media quality properties


About: Using quvi_query_formats

How to use <quvi_query_formats> properly.

  * Call it _before_ <quvi_parse>
  * Choose one of the available format strings from the returned list
  * Set <QUVIOPT_FORMAT> to the chosen value
  * Call <quvi_parse>

Example:

Error handling omitted for brewity.
(start code)
#define URL "http://foo.bar/baz"

char *avail_formats, *get_format;
quvi_media_t m;
quvi_t q;

quvi_init(&q);
quvi_query_formats(q, URL, &avail_formats);
/*
 * SKIP for brewity:
 * - Choose ID from the returned "avail_formats"
 * - Save the chosen value to "get_format"
 */
quvi_setopt(q, QUVIOPT_FORMAT, get_format);
quvi_parse(q, URL, &m);
/* SKIP: Do whatever with the parsed media details */
quvi_free(avail_formats);
quvi_parse_close(&m);
quvi_close(&q);
(end)

About: Tips

Useful tips.

Notes:

  * The 'default' is handled always
  * The 'best' is handled when the webscript supports >1 formats
  * Use <quvi_query_formats> to get a list of available formats

Also good to know:

  * Webscripts fallback to 'default' if they do not recognize format string
  * <quvi_query_formats> does not include 'default' or 'best'
  * <QUVIOPT_FORMAT> can be of any string value
